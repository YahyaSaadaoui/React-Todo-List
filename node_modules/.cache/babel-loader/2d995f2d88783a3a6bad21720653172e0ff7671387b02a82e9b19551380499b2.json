{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\WMD\\\\to-do\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // tasks :\n  const [toDo, setToDo] = useState([{\n    \"id\": 1,\n    \"title\": \"task 1\",\n    \"status\": false\n  }, {\n    \"id\": 2,\n    \"title\": \"task 2\",\n    \"status\": false\n  }]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n  // function add tasks :\n  const addTask = () => {};\n  // function delete tasks :\n  const deleteTask = id => {};\n  // function mark task as done \n  const markDone = id => {};\n  // function to cancel update\n  const cancelUpdate = () => {};\n  // function change task for update :\n  const changeTask = e => {};\n  // function to update task \n  const updateTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), toDo && toDo.length ? '' : 'Empty no Taskes are added', toDo && toDo.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hUA68OB0XS5Udfg5fVH1B//Qnwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","deleteTask","id","markDone","cancelUpdate","changeTask","e","updateTask","length","map","task","index","status","title"],"sources":["C:/Users/Lenovo/Desktop/WMD/to-do/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck , faPen , faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nfunction App() {\n  // tasks :\n  const [toDo, setToDo] = useState([\n    { \"id\": 1, \"title\": \"task 1\", \"status\": false },\n    { \"id\": 2, \"title\": \"task 2\", \"status\": false }\n  ]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n  // function add tasks :\n  const addTask = () => {\n     \n  }\n  // function delete tasks :\n  const deleteTask = (id) => {\n     \n  }\n  // function mark task as done \n  const markDone = (id) => {\n\n  }\n  // function to cancel update\n  const cancelUpdate = () => {\n\n  }\n  // function change task for update :\n  const changeTask = (e) => {\n\n  }\n  // function to update task \n  const updateTask = () => {\n\n  }\n\n\n\n\n\n\n\n  return (\n    <div className=\"container App\">\n      <br /><br />\n      <h2>To Do App</h2>\n      <br /><br />\n      {toDo && toDo.length ? '' : 'Empty no Taskes are added'}\n      {toDo && toDo\n        .map((task, index) =>{\n        return(\n          <React.Fragment key={task.id}>\n            <div className='col taskBg'>\n               <div className={task.status ? 'done' : ''}>\n                <span className='taskNumber'>{index + 1}</span>\n                <span className='taskText'>{task.title}</span>\n              </div>\n            </div>\n\n        </React.Fragment>\n        )\n      })\n      }\n \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,sCAAsC;AAC7C,SAASC,aAAa,EAAGC,KAAK,EAAGC,UAAU,QAAQ,mCAAmC;AACtF,OAAO,WAAW;AAAC;AACnB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAC/B;IAAE,IAAI,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAM,CAAC,EAC/C;IAAE,IAAI,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAM,CAAC,CAChD,CAAC;EACF;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAMY,OAAO,GAAG,MAAM,CAEtB,CAAC;EACD;EACA,MAAMC,UAAU,GAAIC,EAAE,IAAK,CAE3B,CAAC;EACD;EACA,MAAMC,QAAQ,GAAID,EAAE,IAAK,CAEzB,CAAC;EACD;EACA,MAAME,YAAY,GAAG,MAAM,CAE3B,CAAC;EACD;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK,CAE1B,CAAC;EACD;EACA,MAAMC,UAAU,GAAG,MAAM,CAEzB,CAAC;EAQD,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA;MAAA;MAAA;IAAA,QAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eACZ;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA;MAAA;MAAA;IAAA,QAAM;MAAA;MAAA;MAAA;IAAA,QAAM,EACXb,IAAI,IAAIA,IAAI,CAACc,MAAM,GAAG,EAAE,GAAG,2BAA2B,EACtDd,IAAI,IAAIA,IAAI,CACVe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MACrB,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACb;UAAK,SAAS,EAAC,YAAY;UAAA,uBACxB;YAAK,SAAS,EAAED,IAAI,CAACE,MAAM,GAAG,MAAM,GAAG,EAAG;YAAA,wBACzC;cAAM,SAAS,EAAC,YAAY;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/C;cAAM,SAAS,EAAC,UAAU;cAAA,UAAED,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA;QAC1C;UAAA;UAAA;UAAA;QAAA;MACF,GANaH,IAAI,CAACR,EAAE;QAAA;QAAA;QAAA;MAAA,QAQb;IAEnB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAGE;AAEV;AAAC,GAhEQT,GAAG;AAAA,KAAHA,GAAG;AAkEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}