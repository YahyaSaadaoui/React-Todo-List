{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yahya\\\\Downloads\\\\React-Todo-List-main\\\\React-Todo-List-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // tasks :\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'create a to-do list app using react.js',\n    status: true\n  }, {\n    id: 2,\n    title: 'Get A Job',\n    status: false\n  }]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  // function add tasks :\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // function delete tasks :\n  const deleteTask = id => {\n    let newTask = toDo.filter(task => task.id !== id);\n    setToDo(newTask);\n  };\n\n  // function mark task as done \n  const markDone = id => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // function to cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // function change task for update :\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // function to update task \n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpdateData('');\n  };\n\n  // function to handle drag start\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id.toString());\n  };\n\n  // function to handle drag over\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  // function to handle drop\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const droppedId = parseInt(e.dataTransfer.getData('text/plain'));\n    const droppedTask = toDo.find(task => task.id === droppedId);\n    const updatedTasks = toDo.filter(task => task.id !== droppedId);\n    const droppedIndex = updatedTasks.findIndex(task => task.id === id);\n    updatedTasks.splice(droppedIndex, 0, droppedTask);\n    setToDo(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), updateData && updateData.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: updateData.title,\n            onChange: e => changeTask(e),\n            className: \"form-control form-control-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateTask,\n            className: \"btn btn-lg btn-warning mr-20\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelUpdate,\n            className: \"btn btn-lg btn-danger mr-20\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newTask,\n            onChange: e => setNewTask(e.target.value),\n            className: \"form-control form-control-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            className: \"btn btn-lg btn-success mr-20\",\n            children: \"New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-text\",\n      children: toDo && toDo.length ? '' : 'Add New Tasks In The Input Field'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), toDo && toDo.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col taskBg\",\n      draggable: true,\n      onDragStart: e => handleDragStart(e, task.id),\n      onDragOver: e => handleDragOver(e),\n      onDrop: e => handleDrop(e, task.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: task.status ? 'done' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"taskNumber\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"taskText\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iconsWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Done / Not Done \",\n          onClick: () => markDone(task.id),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Modify\",\n          onClick: () => setUpdateData({\n            id: task.id,\n            title: task.title,\n            status: task.status ? true : false\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Delete\",\n          onClick: () => deleteTask(task.id),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashCan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All rights reserved to Yahya Saadaoui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vUHTg8IsrYCfPaLUrDt5g02nZkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","id","title","status","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","deleteTask","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updateObject","handleDragStart","dataTransfer","setData","toString","handleDragOver","preventDefault","handleDrop","droppedId","parseInt","getData","droppedTask","find","updatedTasks","droppedIndex","findIndex","splice","index"],"sources":["C:/Users/yahya/Downloads/React-Todo-List-main/React-Todo-List-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n\nfunction App() {\n  // tasks :\n  const [toDo, setToDo] = useState([\n    { id: 1, title: 'create a to-do list app using react.js', status: true },\n    { id: 2, title: 'Get A Job', status: false },\n  ]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  // function add tasks :\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = { id: num, title: newTask, status: false };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  }\n\n  // function delete tasks :\n  const deleteTask = (id) => {\n    let newTask = toDo.filter(task => task.id !== id);\n    setToDo(newTask);\n  }\n\n  // function mark task as done \n  const markDone = (id) => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return ({ ...task, status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  // function to cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  // function change task for update :\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n  }\n\n  // function to update task \n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpdateData('');\n  }\n\n  // function to handle drag start\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id.toString());\n  }\n\n  // function to handle drag over\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  }\n\n  // function to handle drop\n  const handleDrop = (e, id) => {\n    e.preventDefault();\n    const droppedId = parseInt(e.dataTransfer.getData('text/plain'));\n    const droppedTask = toDo.find(task => task.id === droppedId);\n    const updatedTasks = toDo.filter(task => task.id !== droppedId);\n    const droppedIndex = updatedTasks.findIndex(task => task.id === id);\n    updatedTasks.splice(droppedIndex, 0, droppedTask);\n    setToDo(updatedTasks);\n  }\n\n  return (\n    <div className=\"container App\">\n      <br /><br />\n      <h2>To Do App</h2>\n      <br /><br />\n      {updateData && updateData.id ?\n        (\n          <>\n            {/* form to update task  */}\n            <div className='row'>\n              <div className='col-5'>\n                <input value={updateData.title} onChange={(e) => changeTask(e)} className='form-control form-control-lg' />\n              </div>\n              <div className='col-4'>\n                <button onClick={updateTask} className='btn btn-lg btn-warning mr-20'>Update</button>\n                <button onClick={cancelUpdate} className='btn btn-lg btn-danger mr-20'>Cancel</button>\n              </div>\n            </div><br />\n          </>\n        ) :\n        (\n          <>\n            {/* form to add task */}\n            <div className='row'>\n              <div className='col-4'>\n                <input value={newTask} onChange={(e => setNewTask(e.target.value))} className='form-control form-control-lg' />\n              </div>\n              <div className='col-5'>\n                <button onClick={addTask} className='btn btn-lg btn-success mr-20'>New Task</button>\n              </div>\n            </div><br />\n          </>\n        )\n      }\n      <div className='empty-text'>\n        {toDo && toDo.length ? '' : 'Add New Tasks In The Input Field'}\n      </div>\n      {toDo &&\n        toDo.map((task, index) => (\n          <div\n            key={task.id}\n            className=\"col taskBg\"\n            draggable={true}\n            onDragStart={(e) => handleDragStart(e, task.id)}\n            onDragOver={(e) => handleDragOver(e)}\n            onDrop={(e) => handleDrop(e, task.id)}\n          >\n            <div className={task.status ? 'done' : ''}>\n              <span className=\"taskNumber\">{index + 1}</span>\n              <span className=\"taskText\">{task.title}</span>\n            </div>\n            <div className=\"iconsWrap\">\n              <span title=\"Done / Not Done \" onClick={() => markDone(task.id)}>\n                <FontAwesomeIcon icon={faCircleCheck} />\n              </span>\n              {task.status ? null : (\n                <span\n                  title=\"Modify\"\n                  onClick={() =>\n                    setUpdateData({\n                      id: task.id,\n                      title: task.title,\n                      status: task.status ? true : false,\n                    })\n                  }\n                >\n                  <FontAwesomeIcon icon={faPen} />\n                </span>\n              )}\n              <span title=\"Delete\" onClick={() => deleteTask(task.id)}>\n                <FontAwesomeIcon icon={faTrashCan} />\n              </span>\n            </div>\n          </div>\n        ))}\n      <p>All rights reserved to Yahya Saadaoui</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}