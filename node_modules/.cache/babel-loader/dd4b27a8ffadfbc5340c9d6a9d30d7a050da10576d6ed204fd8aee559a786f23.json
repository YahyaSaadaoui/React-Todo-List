{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yahya\\\\Downloads\\\\React-Todo-List-main\\\\React-Todo-List-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n\n// Import the necessary functions from react-dnd\nimport { useDrag, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n// Import the Task component\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // tasks :\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'create a to-do list app using react.js',\n    status: true\n  }, {\n    id: 2,\n    title: 'Get A Job',\n    status: false\n  }]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n\n  // function add tasks :\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // function delete tasks :\n  const deleteTask = id => {\n    let newTask = toDo.filter(task => task.id !== id);\n    setToDo(newTask);\n  };\n\n  // function mark task as done \n  const markDone = id => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  // function to cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // function change task for update :\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // function to update task \n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpdateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container App\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"To Do App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), toDo && toDo.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        index: index,\n        markDone: markDone,\n        deleteTask: deleteTask,\n        updateTask: updateTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"all right are reserved to | Yahya Saadaoui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5LJDfzQh6PLiN/Ft8t8Z772zl5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","useDrag","DndProvider","HTML5Backend","Task","App","toDo","setToDo","id","title","status","newTask","setNewTask","addTask","num","length","newEntry","deleteTask","filter","task","markDone","map","cancelUpdate","setUpdateData","changeTask","e","updateData","target","value","updateTask","filterRecords","updateObject","index"],"sources":["C:/Users/yahya/Downloads/React-Todo-List-main/React-Todo-List-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n\n// Import the necessary functions from react-dnd\nimport { useDrag, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n// Import the Task component\nimport Task from './Task';\n\nfunction App() {\n  // tasks :\n  const [toDo, setToDo] = useState([\n    { id: 1, title: 'create a to-do list app using react.js', status: true },\n    { id: 2, title: 'Get A Job', status: false },\n  ]);\n  // temporary tasks\n  const [newTask, setNewTask] = useState('');\n\n  // function add tasks :\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = { id: num, title: newTask, status: false };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  }\n\n  // function delete tasks :\n  const deleteTask = (id) => {\n    let newTask = toDo.filter(task => task.id !== id);\n    setToDo(newTask);\n  }\n\n  // function mark task as done \n  const markDone = (id) => {\n    let newTask = toDo.map(task => {\n      if (task.id === id) {\n        return ({ ...task, status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  // function to cancel update\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  // function change task for update :\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n  }\n\n  // function to update task \n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpdateData('');\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"container App\">\n        <br /><br />\n        <h2>To Do App</h2>\n        <br /><br />\n        {/* Rest of your JSX code */}\n        {/* ... */}\n        <div className='empty-text'>\n          {/* ... */}\n        </div>\n        {toDo &&\n          toDo.map((task, index) => (\n            <Task\n              key={task.id}\n              task={task}\n              index={index}\n              markDone={markDone}\n              deleteTask={deleteTask}\n              updateTask={updateTask}\n            />\n          ))}\n        <p>all right are reserved to | Yahya Saadaoui</p>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}